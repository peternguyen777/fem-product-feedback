import React from "react";
import Head from "next/head";
import Link from "next/link";

import ButtonSubmit1 from "../../components/UI/ButtonSubmit1";
import Button3 from "../../components/UI/Button3";

import { useForm } from "react-hook-form";

function newFeedback() {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm({ mode: "all" });

  const onSubmit = (data) => console.log(data);

  return (
    <div className='mx-6 mt-[34px]'>
      <Head>
        <title>Product Feedback - New Feedback</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/assets/favicon-32x32.png' />
      </Head>
      <Link href='/'>
        <div className='flex cursor-pointer items-center'>
          <svg
            xmlns='http://www.w3.org/2000/svg'
            className='mr-4 h-[10px] w-[7px] stroke-gray stroke-2'
          >
            <path d='M6 9L2 5l4-4' fill='none' fillRule='evenodd' />
          </svg>
          <p className='body3 text-gray md:hidden'>Go Back</p>
          <h4 className='hidden text-gray md:block'>Go Back</h4>
        </div>
      </Link>

      <div className='relative mt-[55px] rounded-[10px] bg-white p-6 pt-11'>
        <form onSubmit={handleSubmit(onSubmit)}>
          <svg
            xmlns='http://www.w3.org/2000/svg'
            className='absolute top-0 h-14 w-14 -translate-y-1/2'
          >
            <defs>
              <radialGradient
                cx='103.9%'
                cy='-10.387%'
                fx='103.9%'
                fy='-10.387%'
                r='166.816%'
                id='a'
              >
                <stop stopColor='#E84D70' offset='0%' />
                <stop stopColor='#A337F6' offset='53.089%' />
                <stop stopColor='#28A7ED' offset='100%' />
              </radialGradient>
            </defs>
            <g fill='none' fillRule='evenodd'>
              <circle fill='url(#a)' cx='28' cy='28' r='28' />
              <path
                fill='#FFF'
                fillRule='nonzero'
                d='M30.343 36v-5.834h5.686v-4.302h-5.686V20h-4.597v5.864H20v4.302h5.746V36z'
              />
            </g>
          </svg>
          <h3 className='text-lightnavy'>New Feedback</h3>

          <label htmlFor='title'>
            <p className='body3 mt-6 text-lightnavy'>Feedback Title</p>
            <p className='body3 mt-[3px] font-normal text-gray'>
              Add a short, descriptive headline
            </p>
          </label>
          <div className='relative'>
            <input
              {...register("title", { required: "Can't be empty" })}
              id='title'
              className={`mt-4 ${
                errors.title && `ring-1 ring-[#D73737] focus:ring-[#D73737]`
              }`}
            />
            <h4 className='absolute -bottom-1 translate-y-full font-normal text-[#D73737]'>
              {errors.title?.message}
            </h4>
          </div>

          <label htmlFor='category'>
            <p className='body3 mt-6 text-lightnavy'>Category</p>
            <p className='body3 mt-[3px] font-normal text-gray'>
              Choose a category for your feedback
            </p>
          </label>
          <div className='relative'>
            <select
              {...register("category", { required: "Can't be empty" })}
              id='category'
              className={`body2 mt-4 h-12 w-full rounded-[5px] bg-lightgray px-4 font-jost text-gray outline-none ${
                errors.category && `ring-1 ring-[#D73737] focus:ring-[#D73737]`
              }`}
            >
              <option disabled value='' selected>
                Choose an Option
              </option>
              <option value='UI'>UI</option>
              <option value='UX'>UX</option>
              <option value='Enhancement'>Enhancement</option>
              <option value='Bug'>Bug</option>
              <option value='Feature'>Feature</option>
            </select>
            <h4 className='absolute -bottom-1 translate-y-full font-normal text-[#D73737]'>
              {errors.category?.message}
            </h4>
          </div>

          <label htmlFor='detail'>
            <p className='body3 mt-6 text-lightnavy'>Feedback Detail</p>
            <p className='body3 mt-[3px] font-normal text-gray'>
              Include any specific comments on what should be improved, added,
              etc.
            </p>
          </label>
          <div className='relative'>
            <textarea
              id='detail'
              {...register("detail", { required: "Can't be empty" })}
              className={`mt-4 ${
                errors.detail && `ring-1 ring-[#D73737] focus:ring-[#D73737]`
              }`}
            />
            <h4 className='absolute -bottom-1 translate-y-full font-normal text-[#D73737]'>
              {errors.detail?.message}
            </h4>
          </div>
          <div className='mt-10 w-full space-y-4'>
            <ButtonSubmit1 full submit>
              Add Feedback
            </ButtonSubmit1>
            <Button3 href='/' full>
              Cancel
            </Button3>
          </div>
        </form>
      </div>
    </div>
  );
}

export default newFeedback;
